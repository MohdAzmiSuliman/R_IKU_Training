---
title: "Statistical Tests in R"
subtitle: "Kursus R: Pengenalan dan Praktikal (Sesi 2)"
format: 
  clean-revealjs: 
    slide-number: true
    lightbox: true
    auto-stretch: false
    footer: "Statistical Tests in R"
author:
  - name: Mohd Azmi Bin Suliman
    orcid: 0000-0002-2125-3811
    email: azmi.suliman@moh.gov.my
    affiliations: Pusat Penyelidikan Penyakit Tak Berjangkit, Institut Kesihatan Umum
date: 2024-03-06
date-format: "dddd, DD MMMM YYYY"
embed-resources: true
execute: 
  echo: true
---

# Statistical Tests in R: Descriptive Analysis

```{css}
#| echo: false

code.sourceCode {
  font-size: 1.3em;
}
```

## Descriptive Analysis

-   Descriptive analysis refers to summarizing and describing the main features of a dataset.
-   Count and percentage for categorical data.
-   Mean, median, standard deviation, and range for numerical data.
-   Data visualisation also part of descriptive analysis.

## Descriptive Analysis

-   There are many ways to perform descriptive analysis in R.
-   We can use base function, or commonly people use tidyverse package for descriptive analysis.
-   In this session, I want to introduce `summarytools` and `gtsummary`package for descriptive analysis.
    -   Easier to use
    -   More informative.
    -   Nicer outcome (especially when render the Quarto document!)

# Lets Try!

Setup your project & quarto document.

## Create New Project

-   Remember last week? RStudio allows for project management.
    -   Project as 'container' for our work.

1.  Open RStudio.
2.  Create a new project.
    -   `File` \> `New Project` \> `New Directory` \> `New Project`
3.  Set the name and directory
    -   Name: `Statistical Tests in R`
    -   Directory: `.../Documents/RStudio`
4.  Click `Create Project`

## Create New Project

![](images/New_Project.png)

## Create New Quarto Document

Quarto as R Notebook.

1.  Create new Quarto document
    -   `File` \> `New File` \> `Quarto Document...`
2.  Set the title
    -   Title: `Statistical Tests in R`
    -   Untick `Use visual editor`
3.  Click `Create Empty Document`
4.  Edit the YAML
    -   add `embed-resources: true` parameter

## Create New Quarto Document

![](images/New_Qmd.png)


## Import Dataset

1.  Copy the dataset `asthmads_clean.sav` into the working directory.
    -   Download the dataset from Google Drive folder.
    -   Open folder that the dataset downloaded to.
    -   Copy the dataset.
    -   Open your working directory
    -   `File` pane \> `⚙️ More` \> `Show Folder in New Window`
    -   Paste the dataset into the working directory
2.  In the Quarto document, add a new level 1 header & levl 2 header
    -   `# Preparation`
    -   `## Data Import`

## Import Dataset

3.  Import the dataset. We will use `asthmads_clean.sav` dataset
    -   `File` \> `Import Dataset` \> `From SPSS...`
    -   Select the dataset `asthmads_clean.sav`
    -   Click `Open`
    -   Untick `Open Data Viewer`
    -   Click clipboard symbol 📋

## Import Dataset

![](images/Import_Dataset.png)

## Import Dataset

4.  Paste the code into r chunk
5.  Use `as_factor` function to read the label and apply to the dataset
    -   We can use %\>% pipe operator to use `as_factor` function
    -   Don't forget to load `tidyverse` package first

```{r}
library(tidyverse)
library(haven)
asthmads_clean <- read_sav("asthmads_clean.sav") %>% 
  as_factor()
```

## Import Dataset

```{r}
asthmads_clean
```


# Lets Try!

Descriptive Analysis with `summarytools` package

## Descriptive Analysis with `summarytools`

-   Load `summarytools` package
-   Note: *gtsummary* package will be used later.


```{r}
library(summarytools)
```


## Descriptive Analysis: Categorical Variables

-   Count and percentage for categorical data.

```{r}
asthmads_clean %>% 
  freq(Gender)
```

## Descriptive Analysis: Categorical Variables

-   We can also summarise multiple variables at once.

```{r}
asthmads_clean %>% 
  select(where(is.factor)) %>% 
  freq()
```

## Descriptive Analysis: Numerical Variables

-   Mean, median, standard deviation, and range for numerical data.

```{r}
asthmads_clean %>%
  descr(Height)
```

## Descriptive Analysis: Numerical Variables

-   similarly, we can also summarise multiple variables at once.

```{r}
asthmads_clean %>% 
  select(where(is.numeric)) %>%
  descr()
```

## Descriptive Analysis: Data Frame Summaries

-   `summarytools` also provide whole data frame summaries, via `dfSummary` function.
-   Need to use `stview` function to view the summary.


```{r}
#| eval: false

asthmads_clean %>% 
  dfSummary() %>% 
  stview()
```

## Grouped Analysis

-   We can also perform grouped summaries using `group_by` function from `tidyverse`

```{r}
asthmads_clean %>% 
  group_by(Gender) %>% 
  freq(WorkStatus)
```

## Grouped Analysis

-   We can also perform grouped summaries using `group_by` function from `tidyverse`

```{r}
asthmads_clean %>% 
  group_by(Gender) %>% 
  descr(c(Weight_Pre))
```




# Lets Try!

Descriptive Analysis with gtsummary

## Descriptive Analysis with `gtsummary`

-   The main function of Quarto is for publishing.
-   `summarytools` is great tools for data exploration.
-   However, if we want to publish the document, we need a better looking table.
-   `gtsummary` package is a great package for this purpose.

```{r}
library(gtsummary)
```

## Descriptive Analysis with `gtsummary`

-   using `tbl_summary` function to summarise the data.
-   Note: *The variable column (Characteristic) will automatically read the variable's label, is available.*

```{r}
asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary()
```


## Descriptive Analysis with `gtsummary`

-   we can customise it.
    -   change the variable label using `label = ` parameter

```{r}
#| code-line-numbers: "3-7"

asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary(label = list(Ht_m = "Height (m)", 
                           BMI_Pre = "BMI (Pre)", 
                           BMI_PreCat = "BMI Category (Pre)",
                           BMI_Post = "BMI (Post)", 
                           BMI_PostCat = "BMI Category (Post)"))

```


## Descriptive Analysis with `gtsummary`

-   we can customise it.
    -   change the digit using `digits = ` parameter

```{r}
#| code-line-numbers: "4-6"

asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary(label = list(Ht_m = "Height (m)"),
              digits = list(all_continuous() ~ 2, 
                            all_categorical() ~ c(0,1), 
                            Age ~ 0))
```



## Descriptive Analysis with `gtsummary`

-   we can customise it.
    -   by default, the numerical variables are reported in Median (IQR)
    -   change it to Mean (SD) using `stat = ` parameter

```{r}
#| code-line-numbers: "7"

asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary(label = list(Ht_m = "Height (m)"),
              digits = list(all_continuous() ~ 2, 
                            all_categorical() ~ c(0,1), 
                            Age ~ 0), 
              stat = list(all_continuous() ~ "{mean} ({sd})"))
```


# Grouped Summaries with `gtsummary`


## Grouped Summaries with `gtsummary`

-   We can also perform grouped summaries by using `by = ` parameter.

```{r}
#| code-line-numbers: "3"
#| eval: false

asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary(by = Gender, 
              label = list(Ht_m = "Height (m)"),
              digits = list(all_continuous() ~ 2, 
                            all_categorical() ~ c(0,1), 
                            Age ~ 0), 
              stat = list(all_continuous() ~ "{mean} ({sd})"))
```

## Grouped Summaries with `gtsummary`

-   We can also perform grouped summaries by using `by = ` parameter.

```{r}
#| echo: false

asthmads_clean %>% 
  select(Gender:BMI_PostCat) %>%
  tbl_summary(by = Gender, 
              label = list(Ht_m = "Height (m)"),
              digits = list(all_continuous() ~ 2, 
                            all_categorical() ~ c(0,1), 
                            Age ~ 0), 
              stat = list(all_continuous() ~ "{mean} ({sd})"))
```


# Univariate Analysis of Categorical Data

-   Pearson's Chi-Square Test
-   Fisher's Exact Test
-   McNemar's Test

# Contingency Table

## Contingency Table

-   Bivariate analysis involves examining the relationship between two variables
-   When both variables are categorical, bivariate analysis look how these categories are related
-   Bivariate analyses of categorical data often involve the use of contingency tables.
    -   Simple matrix that display the frequency distribution of the variables.
-   Other names include:
    -   Cross-tabulation
    -   2x2 Table

## Contingency Table Example

In this example between smoking status and lung cancer status:

```{r}
#| echo: false
#| tbl-cap: "Contigency Table Structure"

library(tibble)
library(gt)

tribble(
  ~Status,        ~"Lung Cancer", ~"No Lung Cancer", ~"Total",
  "Smoker",       "a",      "b",         "a+b",
  "Non-Smoker",   "c",      "d",         "c+d",
  "Total",        "a+c",    "b+d",       "N"
) %>% 
  gt() %>% 
  cols_align(align = "center", columns = everything())
```



## Contingency Table Example

In this example between smoking status and lung cancer status:

-   the independent variable (or the predictor, i.e. the smoking status), is the row
-   the dependent variable (or the outcome, i.e. the cancer status), is the column
-   The letters a, b, c, and d represent the cell frequencies:
    -   a: The number of smokers who have the disease.
    -   b: The number of smokers who do not have the disease.
    -   c: The number of non-smokers who have the disease.
    -   d: The number of non-smokers who do not have the disease.
-   "Total" is the sum of the frequencies in the respective row or column, with N being the grand total of all observations.

